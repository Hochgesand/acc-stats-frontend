{"version":3,"sources":["api/useGetRequest.tsx","Loading.tsx","sessions/HighscoreBoard.tsx","api/endpoints.ts","sessions/AllSessionsTable.tsx","Error.tsx","sessions/stats/generalServerStats/GeneralServerStats.tsx","sessions/MainLanderPage.tsx","App.tsx","reportWebVitals.ts","sessions/session/SessionInformation.tsx","sessions/session/DriverInformation.tsx","sessions/session/LapEntry.tsx","sessions/session/LapTable.tsx","sessions/session/Session.tsx","sessions/stats/driverStats/DriverStats.tsx","index.tsx"],"names":["useGetRequest","path","getData","fetch","method","headers","undefined","then","response","a","ok","Error","json","Loading","className","HighscoreBoard","useState","data","setData","loading","setLoading","useEffect","fetchData","map","item","TrackRow","avgLapTime","avgLapTimeFormatted","bestLapTime","bestLapTimeFormatted","bestTimedriverId","trackName","bestTimeSessionId","trackTimes","href","shortName","firstName","lastName","baseUrl","BackendEndpointSessions","BackendEndpointSession","AllSessionsTable","SessionRow","created_at","id","metaData","raceWeekendIndex","serverName","sessionIndex","sessionType","updated_at","bestDriver","driveSession","error","xmlns","fill","viewBox","d","msg","GeneralServerStats","setError","stats","setStats","drivers","setDrivers","statRequest","driverRequest","piechartConfig","labels","datasets","label","totalInvalidLaps","totalValidLaps","backgroundColor","hoverOffset","catch","err","message","fetchDataDrivers","fetchDataStats","length","options","responsive","color","x","MainLanderPage","stroke","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionInformation","DriverInformation","driver","LapEntry","lap","driverName","lapTimeFormatted","split1Formatted","split2Formatted","split3Formatted","JaNein","num","isValidForBest","LapTable","sessionBigData","lapData","setLapData","session","forEach","driverId","carId","lapTime","sessionId","split1","split2","split3","fastestLap","Session","cars","laps","temp","bestLapTimeNum","Number","MAX_VALUE","playerId","DriverStats","setDriver","times","setTimes","driverTimes","getDriverData","getDriverInfo","ReactDOM","render","StrictMode","exact","props","match","params","document","getElementById"],"mappings":"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","file":"static/js/main.bc1eae6c.chunk.js","sourcesContent":["interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport Loading from \"../Loading\";\nimport TrackTimes from \"../interfaces/TrackTimes\";\nimport Driver from \"../interfaces/Driver\";\n\nexport default function HighscoreBoard(){\n  const [data, setData] = useState([] as TrackTimes[]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: \"https://acc-api.aptinstall.de/tracks/times\"});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center\"}>\n        <h1 className={\"align-middle m-auto\"}>Track scoreboard</h1>\n      </div>\n      <div className=\"overflow-x-auto mt-2\">\n        <table className=\"table w-full\">\n          <thead>\n          <tr>\n            <th/>\n            <th>Track</th>\n            <th>Best laptime</th>\n            <th>player</th>\n          </tr>\n          </thead>\n          <tbody >\n          {data.map(item =>\n            <TrackRow\n              avgLapTime={item.avgLapTime}\n              avgLapTimeFormatted={item.avgLapTimeFormatted}\n              bestLapTime={item.bestLapTime}\n              bestLapTimeFormatted={item.bestLapTimeFormatted}\n              bestTimedriverId={item.bestTimedriverId}\n              trackName={item.trackName}\n              bestTimeSessionId={item.bestTimeSessionId}/>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction TrackRow(trackTimes: TrackTimes){\n  const [data, setData] = useState({} as Driver);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `https://acc-api.aptinstall.de/driver/${trackTimes.bestTimedriverId}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <td>\n        <Loading/>\n      </td>\n    );\n  }\n\n  return(\n    <tr>\n      <td><a href={\"/session/\" + trackTimes.bestTimeSessionId}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td>{trackTimes.trackName}</td>\n      <td >{trackTimes.bestLapTimeFormatted}</td>\n      <td >{(data.shortName + \" - \" + data.firstName + \" \" + data.lastName)}</td>\n    </tr>\n  );\n}\n","export const baseUrl = \"https://acc-api.aptinstall.de\"\n\nexport const BackendEndpointSessions = `${baseUrl}/sessions`;\nexport const BackendEndpointSession = `${baseUrl}/session`;\n\n","import React, {useEffect, useState} from \"react\";\nimport DriveSession from \"../interfaces/DriveSession\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport {BackendEndpointSessions} from \"../api/endpoints\";\nimport Loading from \"../Loading\";\n\nexport default function AllSessionsTable() {\n  const [data, setData] = useState([{} as DriveSession]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `${BackendEndpointSessions}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center mr-2\"}>\n        <h1 className={\"align-middle m-auto\"}>All sessions</h1>\n      </div>\n      <div className=\"overflow-x-auto mt-2 mr-2\">\n        <table className=\"table w-full\">\n          <thead>\n          <tr>\n            <th/>\n            <th>Session</th>\n            <th>Session type</th>\n            <th>Date</th>\n          </tr>\n          </thead>\n          <tbody >\n          {data.map(item =>\n            <SessionRow created_at={item.created_at}\n                        id={item.id}\n                        metaData={item.metaData}\n                        raceWeekendIndex={item.raceWeekendIndex}\n                        serverName={item.serverName}\n                        sessionIndex={item.sessionIndex}\n                        sessionType={item.sessionType}\n                        trackName={item.trackName}\n                        updated_at={item.updated_at}\n                        bestLapTimeFormatted={item.bestLapTimeFormatted}\n                        bestLapTime={item.bestLapTime}\n                        bestDriver={item.bestDriver}/>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction SessionRow(driveSession: DriveSession){\n  return(\n    <tr>\n      <td><a href={\"/session/\" + driveSession.id}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td >{driveSession.trackName}</td>\n      <td >{driveSession.sessionType}</td>\n      <td >{driveSession.created_at}</td>\n    </tr>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error m-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","import Loading from \"../../../Loading\";\nimport Error from \"../../../Error\";\nimport React, {useEffect, useState} from \"react\";\nimport {Doughnut} from 'react-chartjs-2';\nimport useGetRequest from \"../../../api/useGetRequest\";\nimport {baseUrl} from \"../../../api/endpoints\";\nimport {OverallStats} from \"../../../interfaces/OverallStats\";\nimport Driver from \"../../../interfaces/Driver\";\n\nexport default function GeneralServerStats() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const [stats, setStats] = useState({} as OverallStats)\n  const [drivers, setDrivers] = useState([] as Driver[])\n  const statRequest = useGetRequest({path: `${baseUrl}/stats`});\n  const driverRequest = useGetRequest({path: `${baseUrl}/drivers`});\n  const piechartConfig = {\n    labels: [\n      'invalid laps',\n      'valid laps',\n    ],\n    datasets: [{\n      label: 'LapsData',\n      data: [stats.totalInvalidLaps, stats.totalValidLaps],\n      backgroundColor: [\n        'rgb(255,0,0)',\n        'rgb(48,255,0)',\n      ],\n      hoverOffset: 0\n    }],\n  };\n\n  useEffect(() => {\n    async function fetchDataStats() {\n      await statRequest.getData().then(function (json){\n        setStats(json)\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    async function fetchDataDrivers() {\n      await driverRequest.getData().then(function (json){\n        setDrivers(json)\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    fetchDataDrivers();\n    fetchDataStats();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <>\n      <div className={\"relative h-auto text-white mb-3 col-span-4 bg-base-300 p-4 rounded-box w-4/12\"}>\n        <Doughnut data={piechartConfig} options={{responsive: true, color: \"red\"}}/>\n      </div>\n      <div className={\"relative h-auto text-white mb-3 col-span-4 bg-base-300 p-4 rounded-box w-4/12\"}>\n        <p className={\"text-3xl\"}>All Drivers</p>\n        {drivers.map(x =>\n          <div className={\"flex flex-row\"}>\n            <p>{x.shortName} {x.firstName} {x.lastName}</p>\n            <a href={\"/driver/\" + x.id}><button className={\"btn\"}>Go To Session</button></a>\n          </div>\n        )}\n      </div>\n    </>\n\n  )\n}\n","import React from \"react\";\nimport HighscoreBoard from \"./HighscoreBoard\";\nimport AllSessionsTable from \"./AllSessionsTable\";\nimport GeneralServerStats from \"./stats/generalServerStats/GeneralServerStats\";\n\n\nexport default function MainLanderPage() {\n  return(\n    <div>\n      <div className=\"alert mb-2\">\n        <div className=\"flex-1\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#2196f3\"\n               className=\"w-6 h-6 mx-2\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n          </svg>\n          <label>This website is sill under development. Errors may occur and some features could appear to be missing. This is indeed in a pre-alpha state. But anyway, visit our Teamspeak @ ts.germandeathsystem.de</label>\n        </div>\n      </div>\n      <div className={\"grid grid-cols-2\"}>\n        <AllSessionsTable/>\n        <HighscoreBoard/>\n        <GeneralServerStats/>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport './index.scss'\nimport MainLanderPage from \"./sessions/MainLanderPage\";\n\n\nfunction App() {\n  return (\n    <div className={\"lander w-full h-full rounded-md px-4 py-4\"}>\n      <h2>\n        <MainLanderPage/>\n      </h2>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import DriveSession from \"../../interfaces/DriveSession\";\n\nexport default function SessionInformation(driveSession: DriveSession) {\n  return (\n    <div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center w-auto m-2 p-2\">\n        <h2>Sessioninformation</h2>\n      </div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.created_at}\n      </div>\n      <div className=\"h-10 card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.trackName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.serverName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        Best Laptime overall: {driveSession.bestLapTimeFormatted}\n      </div>\n    </div>\n  );\n}\n","import Driver from \"../../interfaces/Driver\";\n\nexport default function DriverInformation(driver: Driver) {\n  return(\n    <tr>\n      <td>{driver.firstName}</td>\n      <td className={\"content-end\"}>{driver.lastName}</td>\n      <td>{driver.shortName}</td>\n      <td>{driver.bestLapTime}</td>\n    </tr>\n  );\n}\n","import {Lap} from \"../../interfaces/Lap\";\nimport React from \"react\";\n\ninterface IJaNein {\n  num: number\n}\n\nexport default function LapEntry(lap: Lap){\n  return(\n    <tr>\n      <td>{lap.id}</td>\n      <td>{lap.driverName}</td>\n      <td>{lap.lapTimeFormatted}</td>\n      <td>{lap.split1Formatted}</td>\n      <td>{lap.split2Formatted}</td>\n      <td>{lap.split3Formatted}</td>\n      <JaNein num={lap.isValidForBest}/>\n    </tr>\n  );\n}\n\nfunction JaNein(num: IJaNein){\n  if (num.num === 1){\n    return (\n      <td>\n        Yes\n      </td>\n    )\n  }\n  return (\n    <td>\n      No\n    </td>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {Lap} from \"../../interfaces/Lap\";\nimport SessionBigData from \"../../interfaces/SessionBigData\";\nimport LapEntry from \"./LapEntry\";\n\n\nexport default function LapTable(sessionBigData: SessionBigData){\n  const [lapData, setLapData] = useState([] as Lap[]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const path = `${BackendEndpointSession}/${sessionBigData.session?.id}/laps`;\n  const {getData} = useGetRequest({path: path})\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        let laps: Lap[] = [];\n        laps = json\n        laps.forEach(lap =>{\n          sessionBigData.drivers?.forEach(driver => {\n            if (driver.id === lap.driverId){\n              lap.driverName = driver.shortName;\n            }\n          });\n        });\n\n        setLapData(json);\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <div className={\"overflow-x-auto mt-5 col-span-4 bg-base-300 p-4 rounded-box w-6/12\"}>\n      <table className={\"table\"}>\n        <thead>\n        <tr>\n          <th>id</th>\n          <th>Name</th>\n          <th>Laptime</th>\n          <th>Split 1</th>\n          <th>Split 2</th>\n          <th>Split 3</th>\n          <th>Valid</th>\n        </tr>\n        </thead>\n        <tbody>\n        {lapData.map(lap =>\n          <LapEntry\n            carId={lap.carId}\n            created_at={lap.created_at}\n            driverId={lap.driverId}\n            id={lap.id}\n            isValidForBest={lap.isValidForBest}\n            lapTime={lap.lapTime}\n            lapTimeFormatted={lap.lapTimeFormatted}\n            sessionId={lap.sessionId}\n            split1={lap.split1}\n            split1Formatted={lap.split1Formatted}\n            split2={lap.split2}\n            split2Formatted={lap.split2Formatted}\n            split3={lap.split3}\n            split3Formatted={lap.split3Formatted}\n            updated_at={lap.updated_at}\n            driverName={lap.driverName}\n            fastestLap={lap.fastestLap}\n          />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import SessionInformation from \"./SessionInformation\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport React, {useEffect, useState} from \"react\";\nimport Error from \"../../Error\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport SessionBigData from \"../../interfaces/SessionBigData\";\nimport Driver from \"../../interfaces/Driver\";\nimport Car from \"../../interfaces/Car\";\nimport DriverInformation from \"./DriverInformation\";\nimport LapTable from \"./LapTable\";\nimport {Lap} from \"../../interfaces/Lap\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function Session({id}: propId) {\n  const [data, setData] = useState({session: {}, cars: [] as Car[], laps: [] as Lap[], drivers: [] as Driver[]} as SessionBigData);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const {getData} = useGetRequest({path: `${BackendEndpointSession}/${id}`})\n\n  useEffect(() => {\n      async function fetchData() {\n        await getData().then(function (json){\n          let temp: SessionBigData = json;\n\n          temp.drivers?.forEach(driver => {\n            driver.bestLapTimeNum = Number.MAX_VALUE\n            temp.session.bestLapTime = Number.MAX_VALUE\n            temp.laps?.forEach(lap => {\n              if (driver.id === lap.driverId && lap.lapTime < driver.bestLapTimeNum){\n                driver.bestLapTimeNum = lap.lapTime;\n                driver.bestLapTime = lap.lapTimeFormatted;\n              }\n              if (lap.lapTime < temp.session.bestLapTime){\n                temp.session.bestLapTimeFormatted = lap.lapTimeFormatted\n                temp.session.bestLapTime = lap.lapTime\n                temp.session.bestDriver = (driver.shortName + driver.firstName + driver.lastName)\n              }\n            });\n          })\n\n          temp.laps?.forEach(lap => {\n            if (lap.lapTime === temp.session.bestLapTime){\n              lap.fastestLap = true;\n            }\n          });\n\n          setData(temp);\n          setLoading(false)\n        }).catch( err =>{\n            setError(err.message)\n            setLoading(false);\n          }\n        );\n      }\n      fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  if (data.session != null && data.drivers != null){\n    return (\n      <div className={\"p-5\"}>\n        <div className=\"flex flex-row w-full\">\n          <div className=\"grid h-auto card bg-base-300 rounded-box place-items-center mb-3 p-2\">\n            <SessionInformation created_at={data.session.created_at} id={data.session.id} metaData={data.session.metaData} raceWeekendIndex={data.session.raceWeekendIndex} serverName={data.session.serverName} sessionIndex={data.session.sessionIndex} sessionType={data.session.sessionType} trackName={data.session.trackName} updated_at={data.session.updated_at} bestLapTime={data.session.bestLapTime} bestLapTimeFormatted={data.session.bestLapTimeFormatted} bestDriver={data.session.bestDriver}/>\n          </div>\n          <div className=\"overflow-x-auto mb-3 ml-5 col-span-4 bg-base-300 p-4 rounded-box w-5/12\">\n            <table className=\"table-zebra table w-full\">\n              <thead>\n              <tr>\n                <th>Driver</th>\n                <th>Name</th>\n                <th>Shortname</th>\n                <th>Best lap time</th>\n              </tr>\n              </thead>\n              <tbody >\n              {data.drivers.map(x =>\n                <DriverInformation created_at={x.created_at} firstName={x.firstName} id={x.id} lastName={x.lastName} playerId={x.playerId} shortName={x.shortName} updated_at={x.updated_at} bestLapTime={x.bestLapTime} bestLapTimeNum={x.bestLapTimeNum}/>\n              )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      <LapTable session={data.session} cars={data.cars} drivers={data.drivers} />\n    </div>\n    );\n  }\n\n  return(\n    <div/>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Loading from \"../../../Loading\";\nimport Error from \"../../../Error\";\nimport useGetRequest from \"../../../api/useGetRequest\";\nimport {baseUrl} from \"../../../api/endpoints\";\nimport Driver from \"../../../interfaces/Driver\";\nimport {Besttimes} from \"../../../interfaces/Besttimes\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function DriverStats({id}: propId){\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [driver, setDriver] = useState({} as Driver)\n  const [times, setTimes] = useState([] as Besttimes[])\n  const driverRequest = useGetRequest({path: `${baseUrl}/driver/${id}`});\n  const driverTimes = useGetRequest({path: `${baseUrl}/driver/${id}/times`});\n\n  useEffect(() => {\n    async function getDriverInfo() {\n      await driverRequest.getData().then(function (json){\n        setDriver(json)\n        setLoading(false)\n      }).catch( err =>{\n          setError(error + err.message)\n          setLoading(false);\n        }\n      );\n    }\n    async function getDriverData() {\n      await driverTimes.getData().then(function (json){\n        setTimes(json)\n        setLoading(false)\n      }).catch( err =>{\n          setError(error + err.message)\n          setLoading(false);\n        }\n      );\n    }\n    getDriverData();\n    getDriverInfo();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <>\n      <div className={\"relative h-auto text-white mb-3 col-span-4 bg-base-300 p-4 rounded-box w-4/12\"}>\n        {times.map(x =>\n          <div className={\"\"}>\n            <p>{x.trackName}</p>\n            <p>{x.bestLapTimeFormatted}</p>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Session from \"./sessions/session/Session\";\nimport DriverStats from \"./sessions/stats/driverStats/DriverStats\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/session/:id\" render={(props) => (\n          <Session id={props.match.params.id}/>\n        )} />\n        <Route exact path=\"/driver/:id\" render={(props) => (\n          <DriverStats id={props.match.params.id}/>\n        )} />\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}