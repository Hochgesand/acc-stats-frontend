{"version":3,"sources":["api/useGetRequest.tsx","sessions/SessionRow.tsx","api/endpoints.ts","Loading.tsx","sessions/TrackRow.tsx","sessions/HighscoreBoard.tsx","sessions/SessionTable.tsx","App.tsx","reportWebVitals.ts","sessions/session/SessionInformation.tsx","Error.tsx","sessions/session/DriverInformation.tsx","sessions/session/LapEntry.tsx","sessions/session/LapTable.tsx","sessions/session/Session.tsx","index.tsx"],"names":["useGetRequest","path","getData","fetch","method","headers","undefined","then","response","a","ok","Error","json","SessionRow","driveSession","href","id","className","trackName","sessionType","created_at","baseUrl","BackendEndpointSessions","BackendEndpointSession","Loading","TrackRow","trackTimes","useState","data","setData","loading","setLoading","bestTimedriverId","useEffect","fetchData","bestTimeSessionId","bestLapTimeFormatted","shortName","firstName","lastName","HighscoreBoard","map","item","avgLapTime","avgLapTimeFormatted","bestLapTime","SessionTable","xmlns","fill","viewBox","stroke","d","metaData","raceWeekendIndex","serverName","sessionIndex","updated_at","bestDriver","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionInformation","error","msg","DriverInformation","driver","LapEntry","lap","driverName","lapTimeFormatted","split1Formatted","split2Formatted","split3Formatted","JaNein","num","isValidForBest","LapTable","sessionBigData","lapData","setLapData","setError","session","forEach","drivers","driverId","catch","err","message","length","carId","lapTime","sessionId","split1","split2","split3","fastestLap","Session","cars","laps","temp","bestLapTimeNum","Number","MAX_VALUE","x","playerId","ReactDOM","render","StrictMode","exact","props","match","params","document","getElementById"],"mappings":"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","file":"static/js/main.31e75c79.chunk.js","sourcesContent":["interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","import DriveSession from \"../interfaces/DriveSession\"\n\nexport default function SessionRow(driveSession: DriveSession){\n  return(\n    <tr>\n      <td><a href={\"/session/\" + driveSession.id}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td >{driveSession.trackName}</td>\n      <td >{driveSession.sessionType}</td>\n      <td >{driveSession.created_at}</td>\n    </tr>\n  );\n}\n","const baseUrl = \"https://acc-api.aptinstall.de\"\n\nexport const BackendEndpointSessions = `${baseUrl}/sessions`;\nexport const BackendEndpointSession = `${baseUrl}/session`;\n\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","import TrackTimes from \"../interfaces/TrackTimes\";\nimport React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport Loading from \"../Loading\";\nimport Driver from \"../interfaces/sessionData/Driver\";\n\nexport default function TrackRow(trackTimes: TrackTimes){\n  const [data, setData] = useState({} as Driver);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `https://acc-api.aptinstall.de/driver/${trackTimes.bestTimedriverId}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <td>\n        <Loading/>\n      </td>\n    );\n  }\n\n  return(\n    <tr>\n      <td><a href={\"/session/\" + trackTimes.bestTimeSessionId}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td>{trackTimes.trackName}</td>\n      <td >{trackTimes.bestLapTimeFormatted}</td>\n      <td >{(data.shortName + \" - \" + data.firstName + \" \" + data.lastName)}</td>\n  </tr>\n);\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport Loading from \"../Loading\";\nimport TrackTimes from \"../interfaces/TrackTimes\";\nimport TrackRow from \"./TrackRow\";\n\nexport default function HighscoreBoard(){\n  const [data, setData] = useState([] as TrackTimes[]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: \"https://acc-api.aptinstall.de/tracks/times\"});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div className=\"overflow-x-auto mt-2\">\n      <table className=\"table w-full\">\n        <thead>\n        <tr>\n          <th/>\n          <th>Track</th>\n          <th>Best laptime...</th>\n          <th>...of player</th>\n        </tr>\n        </thead>\n        <tbody >\n        {data.map(item =>\n          <TrackRow\n            avgLapTime={item.avgLapTime}\n            avgLapTimeFormatted={item.avgLapTimeFormatted}\n            bestLapTime={item.bestLapTime}\n            bestLapTimeFormatted={item.bestLapTimeFormatted}\n            bestTimedriverId={item.bestTimedriverId}\n            trackName={item.trackName}\n            bestTimeSessionId={item.bestTimeSessionId}/>)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport SessionRow from \"./SessionRow\";\nimport DriveSession from \"../interfaces/DriveSession\";\nimport {BackendEndpointSessions} from \"../api/endpoints\";\nimport Loading from \"../Loading\";\nimport HighscoreBoard from \"./HighscoreBoard\";\n\n\nexport default function SessionTable() {\n  const [data, setData] = useState([{} as DriveSession]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `${BackendEndpointSessions}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div>\n      <div className=\"alert mb-2\">\n        <div className=\"flex-1\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#2196f3\"\n               className=\"w-6 h-6 mx-2\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n          </svg>\n          <label>This website is sill under development. Errors may occur and some features could appear to be missing. This is indeed in a pre-alpha state.</label>\n        </div>\n      </div>\n\n      <div className={\"grid grid-cols-2\"}>\n        <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center mr-2\"}>\n          <h1 className={\"align-middle m-auto\"}>All sessions</h1>\n        </div>\n        <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center\"}>\n          <h1 className={\"align-middle m-auto\"}>Track scoreboard</h1>\n        </div>\n        <div className=\"overflow-x-auto mt-2 mr-2\">\n          <table className=\"table w-full\">\n            <thead>\n            <tr>\n              <th/>\n              <th>Session</th>\n              <th>Session type</th>\n              <th>Date</th>\n            </tr>\n            </thead>\n            <tbody >\n            {data.map(item =>\n              <SessionRow created_at={item.created_at}\n                          id={item.id}\n                          metaData={item.metaData}\n                          raceWeekendIndex={item.raceWeekendIndex}\n                          serverName={item.serverName}\n                          sessionIndex={item.sessionIndex}\n                          sessionType={item.sessionType}\n                          trackName={item.trackName}\n                          updated_at={item.updated_at}\n                          bestLapTimeFormatted={item.bestLapTimeFormatted}\n                          bestLapTime={item.bestLapTime}\n                          bestDriver={item.bestDriver}/>)}\n            </tbody>\n          </table>\n        </div>\n        <HighscoreBoard/>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport './index.scss'\nimport SessionTable from \"./sessions/SessionTable\";\n\n\nfunction App() {\n  return (\n    <div className={\"lander w-full h-full rounded-md px-4 py-4\"}>\n      <h2>\n        <SessionTable/>\n      </h2>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import DriveSession from \"../../interfaces/DriveSession\";\n\nexport default function SessionInformation(driveSession: DriveSession) {\n  return (\n    <div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center w-auto m-2 p-2\">\n        <h2>Sessioninformation</h2>\n      </div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.created_at}\n      </div>\n      <div className=\"h-10 card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.trackName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.serverName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        Best Laptime overall: {driveSession.bestLapTimeFormatted}\n      </div>\n    </div>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error m-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","import Driver from \"../../interfaces/sessionData/Driver\";\n\nexport default function DriverInformation(driver: Driver) {\n  return(\n    <tr>\n      <td>{driver.firstName}</td>\n      <td className={\"content-end\"}>{driver.lastName}</td>\n      <td>{driver.shortName}</td>\n      <td>{driver.bestLapTime}</td>\n    </tr>\n  );\n}\n","import {Lap} from \"../../interfaces/sessionData/Lap\";\nimport React from \"react\";\n\ninterface IJaNein {\n  num: number\n}\n\nexport default function LapEntry(lap: Lap){\n  return(\n    <tr>\n      <td>{lap.id}</td>\n      <td>{lap.driverName}</td>\n      <td>{lap.lapTimeFormatted}</td>\n      <td>{lap.split1Formatted}</td>\n      <td>{lap.split2Formatted}</td>\n      <td>{lap.split3Formatted}</td>\n      <JaNein num={lap.isValidForBest}/>\n    </tr>\n  );\n}\n\nfunction JaNein(num: IJaNein){\n  if (num.num === 1){\n    return (\n      <td>\n        Yes\n      </td>\n    )\n  }\n  return (\n    <td>\n      No\n    </td>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {Lap} from \"../../interfaces/sessionData/Lap\";\nimport SessionBigData from \"../../interfaces/sessionData/SessionBigData\";\nimport LapEntry from \"./LapEntry\";\n\n\nexport default function LapTable(sessionBigData: SessionBigData){\n  const [lapData, setLapData] = useState([] as Lap[]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const path = `${BackendEndpointSession}/${sessionBigData.session?.id}/laps`;\n  const {getData} = useGetRequest({path: path})\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        let laps: Lap[] = [];\n        laps = json\n        laps.forEach(lap =>{\n          sessionBigData.drivers?.forEach(driver => {\n            if (driver.id === lap.driverId){\n              lap.driverName = driver.shortName;\n            }\n          });\n        });\n\n        setLapData(json);\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <div className={\"overflow-x-auto mt-5 col-span-4 bg-base-300 p-4 rounded-box w-6/12\"}>\n      <table className={\"table\"}>\n        <thead>\n        <tr>\n          <th>id</th>\n          <th>Name</th>\n          <th>Laptime</th>\n          <th>Split 1</th>\n          <th>Split 2</th>\n          <th>Split 3</th>\n          <th>Valid</th>\n        </tr>\n        </thead>\n        <tbody>\n        {lapData.map(lap =>\n          <LapEntry\n            carId={lap.carId}\n            created_at={lap.created_at}\n            driverId={lap.driverId}\n            id={lap.id}\n            isValidForBest={lap.isValidForBest}\n            lapTime={lap.lapTime}\n            lapTimeFormatted={lap.lapTimeFormatted}\n            sessionId={lap.sessionId}\n            split1={lap.split1}\n            split1Formatted={lap.split1Formatted}\n            split2={lap.split2}\n            split2Formatted={lap.split2Formatted}\n            split3={lap.split3}\n            split3Formatted={lap.split3Formatted}\n            updated_at={lap.updated_at}\n            driverName={lap.driverName}\n            fastestLap={lap.fastestLap}\n          />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import SessionInformation from \"./SessionInformation\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport React, {useEffect, useState} from \"react\";\nimport Error from \"../../Error\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport SessionBigData from \"../../interfaces/sessionData/SessionBigData\";\nimport Driver from \"../../interfaces/sessionData/Driver\";\nimport Car from \"../../interfaces/sessionData/Car\";\nimport DriverInformation from \"./DriverInformation\";\nimport LapTable from \"./LapTable\";\nimport {Lap} from \"../../interfaces/sessionData/Lap\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function Session({id}: propId) {\n  const [data, setData] = useState({session: {}, cars: [] as Car[], laps: [] as Lap[], drivers: [] as Driver[]} as SessionBigData);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const {getData} = useGetRequest({path: `${BackendEndpointSession}/${id}`})\n\n  useEffect(() => {\n      async function fetchData() {\n        await getData().then(function (json){\n          let temp: SessionBigData = json;\n\n          temp.drivers?.forEach(driver => {\n            driver.bestLapTimeNum = Number.MAX_VALUE\n            temp.session.bestLapTime = Number.MAX_VALUE\n            temp.laps?.forEach(lap => {\n              if (driver.id === lap.driverId && lap.lapTime < driver.bestLapTimeNum){\n                driver.bestLapTimeNum = lap.lapTime;\n                driver.bestLapTime = lap.lapTimeFormatted;\n                if (lap.lapTime < temp.session.bestLapTime){\n                  temp.session.bestLapTimeFormatted = lap.lapTimeFormatted\n                  lap.fastestLap = true;\n                  temp.session.bestDriver = (driver.shortName + driver.firstName + driver.lastName)\n                }\n              }\n            });\n          })\n\n          setData(temp);\n          setLoading(false)\n        }).catch( err =>{\n            setError(err.message)\n            setLoading(false);\n          }\n        );\n      }\n      fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  if (data.session != null && data.drivers != null){\n    return (\n      <div className={\"p-5\"}>\n        <div className=\"flex flex-row w-full\">\n          <div className=\"grid h-auto card bg-base-300 rounded-box place-items-center mb-3 p-2\">\n            <SessionInformation created_at={data.session.created_at} id={data.session.id} metaData={data.session.metaData} raceWeekendIndex={data.session.raceWeekendIndex} serverName={data.session.serverName} sessionIndex={data.session.sessionIndex} sessionType={data.session.sessionType} trackName={data.session.trackName} updated_at={data.session.updated_at} bestLapTime={data.session.bestLapTime} bestLapTimeFormatted={data.session.bestLapTimeFormatted} bestDriver={data.session.bestDriver}/>\n          </div>\n          <div className=\"overflow-x-auto mb-3 ml-5 col-span-4 bg-base-300 p-4 rounded-box w-5/12\">\n            <table className=\"table-zebra table w-full\">\n              <thead>\n              <tr>\n                <th>Driver</th>\n                <th>Name</th>\n                <th>Shortname</th>\n                <th>Best lap time</th>\n              </tr>\n              </thead>\n              <tbody >\n              {data.drivers.map(x =>\n                <DriverInformation created_at={x.created_at} firstName={x.firstName} id={x.id} lastName={x.lastName} playerId={x.playerId} shortName={x.shortName} updated_at={x.updated_at} bestLapTime={x.bestLapTime} bestLapTimeNum={x.bestLapTimeNum}/>\n              )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      <LapTable session={data.session} cars={data.cars} drivers={data.drivers} />\n    </div>\n    );\n  }\n\n  return(\n    <div/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Session from \"./sessions/session/Session\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/session/:id\" render={(props) => (\n          <Session id={props.match.params.id}/>\n        )} />\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}