{"version":3,"sources":["Loading.tsx","Error.tsx","api/endpoints.ts","api/APIService.tsx","api/UseAPI.tsx","sessions/stats/Cars/CarModelNameById.tsx","sessions/stats/generalServerStats/GeneralServerStats.tsx","sessions/MainLanderPage.tsx","App.tsx","reportWebVitals.ts","sessions/session/SessionInformation.tsx","sessions/session/DriverInformation.tsx","api/useGetRequest.tsx","sessions/session/LapEntry.tsx","sessions/session/LapTable.tsx","sessions/session/Session.tsx","sessions/stats/Cars/CarNameById.tsx","sessions/stats/driverStats/DriverStats.tsx","sessions/stats/sessionSelectionPages/AllSessionsTable.tsx","sessions/stats/sessionSelectionPages/HighscoreBoard.tsx","sessions/stats/sessionSelectionPages/SessionselectionPage.tsx","sessions/stats/driverStats/AllDriver.tsx","index.tsx"],"names":["Loading","className","Error","error","xmlns","fill","viewBox","d","msg","baseUrl","BackendEndpointSessions","BackendEndpointSession","getRequest","path","a","fetch","method","headers","undefined","then","response","ok","json","APIService","getSessions","getSession","id","push","getTimesOfDriverById","getCarModels","convertedCarmodels","Object","entries","map","key","value","name","getSpecificCarByCarId","getSpecificCarModelByCarId","getGenericServerStats","getAllDrivers","UseAPI","params","useState","data","setData","isLoading","setIsLoading","setError","fetchData","temp","message","useEffect","CarModelNameById","useAPI","GeneralServerStats","useApiStats","piechartConfig","labels","datasets","label","backgroundColor","hoverOffset","totalInvalidLaps","totalValidLaps","length","options","responsive","color","totalTimeWastedFormatted","mostLapsDrivenInASession","href","mostLapsDriveInASessionId","totalUniquePlayerCount","carModelIdWithMostLaps","carModelWithMostLapsLapCount","MainLanderPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionInformation","driveSession","created_at","trackName","serverName","bestLapTimeFormatted","bestDriver","DriverInformation","driver","bestLapTime","firstName","lastName","shortName","useGetRequest","getData","LapEntry","lap","lapTimeFormatted","driverName","split1Formatted","split2Formatted","split3Formatted","JaNein","num","isValidForBest","LapTable","sessionBigData","lapData","setLapData","loading","setLoading","session","forEach","drivers","driverId","catch","err","Session","cars","laps","Number","MAX_VALUE","bestLapTimeNum","lapTime","fastestLap","compileData","metaData","raceWeekendIndex","sessionIndex","sessionType","updated_at","x","CarNameById","carName","DriverStats","bestTimeCarId","AllSessionsTable","item","SessionRow","HighscoreBoard","TrackRow","avgLapTime","avgLapTimeFormatted","bestTimedriverId","bestTimeSessionId","trackTimes","SessionselectionPage","AllDriver","api","ReactDOM","render","StrictMode","stroke","exact","props","match","document","getElementById"],"mappings":"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","file":"static/js/main.11d09996.chunk.js","sourcesContent":["export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error m-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","export const baseUrl = \"https://acc-api.aptinstall.de\"\n\nexport const BackendEndpointSessions = `${baseUrl}/sessions`;\nexport const BackendEndpointSession = `${baseUrl}/session`;\n\n","import {BackendEndpointSession, BackendEndpointSessions, baseUrl} from \"./endpoints\";\nimport DriveSession from \"../interfaces/DriveSession\";\nimport SessionBigData from \"../interfaces/SessionBigData\";\nimport {CarModel} from \"../interfaces/CarModel\";\nimport Car from \"../interfaces/Car\";\nimport {Besttimes} from \"../interfaces/Besttimes\";\nimport {OverallStats} from \"../interfaces/OverallStats\";\nimport Driver from \"../interfaces/Driver\";\n\nasync function getRequest(path: string) {\n  return fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  })\n}\n\nconst APIService = {\n  getSessions: async() => {\n    const response: DriveSession[] = await getRequest(`${BackendEndpointSessions}`)\n    return response\n  },\n\n  getSession: async(id: number) => {\n    const response: SessionBigData[] = [];\n    response.push(await getRequest(`${BackendEndpointSession}/${id}`))\n    return response\n  },\n\n  getTimesOfDriverById: async(id: number) => {\n    const response: Besttimes[] = await getRequest(`${baseUrl}/driver/${id}/times`)\n    return response\n  },\n\n  getCarModels: async() => {\n    let convertedCarmodels: CarModel[] = []\n    const listItems = Object.entries(await getRequest(`${baseUrl}/car/models`))\n    // eslint-disable-next-line array-callback-return\n    listItems.map(([key, value]: any) => {\n      convertedCarmodels.push({id: key, name: value})\n    })\n    return convertedCarmodels\n  },\n\n  getSpecificCarByCarId: async(id: number) => {\n    const response: Car[] = [];\n    response.push(await getRequest(`${baseUrl}/car/${id}`))\n    return response\n  },\n\n  getSpecificCarModelByCarId: async(id: number) => {\n    const response: CarModel[] = [];\n    response.push(await getRequest(`${baseUrl}/car/model/${id}`))\n    return response\n  },\n\n  getGenericServerStats: async() => {\n    const response: OverallStats[] = [];\n    response.push(await getRequest(`${baseUrl}/stats`))\n    return response\n  },\n\n  getAllDrivers: async() => {\n    const response: Driver[] = await getRequest(`${baseUrl}/drivers`)\n    return response\n  }\n}\n\nexport default APIService\n","import {useEffect, useState} from \"react\";\nimport APIService from \"./APIService\";\n\nexport default function UseAPI(method: string, ...params: any[]){\n  const [data, setData]           = useState([] as any[]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError]         = useState(\"\");\n\n  const fetchData = async () => {\n    setError(\"\");\n\n    try {\n      setIsLoading(true);\n      // @ts-ignore\n      const temp: any = await APIService[method](...params)\n      setData(temp);\n    } catch (e: any) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => { fetchData() }, []);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return { data, isLoading, error, fetchData };\n}\n","import UseAPI from \"../../../api/UseAPI\";\nimport Loading from \"../../../Loading\";\nimport React from \"react\";\n\ninterface props {\n  id: number\n}\n\nexport default function CarModelNameById({id}: props) {\n  const useAPI = UseAPI('getSpecificCarModelByCarId', id)\n\n  if (useAPI.isLoading)\n    return (\n      <Loading/>\n    )\n\n  return(\n    <>{useAPI.data[0] === undefined ? \"error\" : useAPI.data[0].name}</>\n  )\n}\n","import Loading from \"../../../Loading\";\nimport Error from \"../../../Error\";\nimport React from \"react\";\nimport {Doughnut} from 'react-chartjs-2';\nimport UseAPI from \"../../../api/UseAPI\";\nimport CarModelNameById from \"../Cars/CarModelNameById\";\n\nexport default function GeneralServerStats() {\n  const useApiStats = UseAPI('getGenericServerStats')\n\n  let piechartConfig = {\n    labels: [\n      'invalid laps',\n      'valid laps',\n    ],\n    datasets: [{\n      label: 'LapsData',\n      data: [0, 0],\n      backgroundColor: [\n        'rgb(255,0,0)',\n        'rgb(48,255,0)',\n      ],\n      hoverOffset: 0\n    }],\n  };\n\n  if (!useApiStats.isLoading) {\n    piechartConfig = {\n      labels: [\n        'invalid laps',\n        'valid laps',\n      ],\n      datasets: [{\n        label: 'LapsData',\n        data: [useApiStats.data[0].totalInvalidLaps, useApiStats.data[0].totalValidLaps],\n        backgroundColor: [\n          'rgb(255,0,0)',\n          'rgb(48,255,0)',\n        ],\n        hoverOffset: 0\n      }],\n    };\n  }\n\n  if (useApiStats.isLoading) {\n    return <Loading/>\n  }\n\n  if (useApiStats.error.length > 0) {\n    return (\n      <Error msg={useApiStats.error}/>\n    );\n  }\n\n  return (\n    <div className={\"w-100 grid grid-rows-1 gap-4 \"}>\n      <div className={\"h-auto text-white mb-3 bg-base-300 p-4 rounded-box w-full\"}>\n        <Doughnut data={piechartConfig} options={{responsive: true, color: \"red\"}}/>\n        <p className={\"mt-4 text-2xl\"}>Accumulated wasted time on all servers</p>\n        <p>{useApiStats.data[0].totalTimeWastedFormatted}</p>\n        <p className={\"mt-4 text-2xl\"}>Session with most laps driven</p>\n        <p>{useApiStats.data[0].mostLapsDrivenInASession}\n        <a href={\"/session/\" + useApiStats.data[0].mostLapsDriveInASessionId}>\n          <button className={\"ml-2 btn btn-sm\"}>Go To Session</button>\n        </a></p>\n        <p className={\"mt-4 text-2xl\"}>Unique player counter</p>\n        <p>{useApiStats.data[0].totalUniquePlayerCount}</p>\n        <p className={\"mt-4 text-2xl\"}>Most popular car and driven laps</p>\n        <p><CarModelNameById id={useApiStats.data[0].carModelIdWithMostLaps}/></p>\n        <p>Total laps: {useApiStats.data[0].carModelWithMostLapsLapCount}</p>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport GeneralServerStats from \"./stats/generalServerStats/GeneralServerStats\";\n\n\nexport default function MainLanderPage() {\n  return (\n    <div>\n      <div className={\"flex flex-row\"}>\n        <GeneralServerStats/>\n        <div className={\"flex flex-col ml-4\"}>\n          <a href={\"/sessions\"}><button className={\"btn h-auto\"}>Show all Sessions and Sessionscoreboard</button></a>\n          <a href={\"/drivers\"} className={\"mt-4\"}><button className={\"btn h-auto\"}>Show all Drivers</button></a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport './index.scss'\nimport MainLanderPage from \"./sessions/MainLanderPage\";\n\n\nfunction App() {\n  return (\n    <div className={\"lander w-full h-full rounded-md\"}>\n      <h2>\n        <MainLanderPage/>\n      </h2>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import DriveSession from \"../../interfaces/DriveSession\";\n\nexport default function SessionInformation(driveSession: DriveSession) {\n  return (\n    <div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center w-auto m-2 p-2\">\n        <h2>Sessioninformation</h2>\n      </div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.created_at}\n      </div>\n      <div className=\"h-10 card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.trackName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.serverName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        Best Laptime overall: {driveSession.bestLapTimeFormatted} | {driveSession.bestDriver}\n      </div>\n    </div>\n  );\n}\n","import Driver from \"../../interfaces/Driver\";\nimport React from \"react\";\n\nexport interface props{\n  driver: Driver\n  bestLapTime: string\n}\n\nexport default function DriverInformation({driver, bestLapTime}: props) {\n  return(\n    <tr>\n      <td>{driver.firstName}</td>\n      <td className={\"content-end\"}>{driver.lastName}</td>\n      <td>{driver.shortName}</td>\n      <td className={`${bestLapTime === driver.bestLapTime ? \"text-green-500\" : \"\"}`}>{driver.bestLapTime}</td>\n      <td><a href={\"/driver/\" + driver.id}><button className={\"btn\"}>Go To Driver</button></a></td>\n    </tr>\n  );\n}\n","interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","import {Lap} from \"../../interfaces/Lap\";\nimport React from \"react\";\n\ninterface IJaNein {\n  num: number\n}\n\nexport interface props {\n  lap: Lap\n  bestLapTime: string\n}\n\nexport default function LapEntry({lap, bestLapTime}:props){\n  return(\n    <tr className={`${bestLapTime === lap.lapTimeFormatted ? \"text-green-500\" : \"\"}`}>\n      <td>{lap.id}</td>\n      <td>{lap.driverName}</td>\n      <td>{lap.lapTimeFormatted}</td>\n      <td>{lap.split1Formatted}</td>\n      <td>{lap.split2Formatted}</td>\n      <td>{lap.split3Formatted}</td>\n      <JaNein num={lap.isValidForBest}/>\n    </tr>\n  );\n}\n\nfunction JaNein(num: IJaNein){\n  if (num.num === 1){\n    return (\n      <td>\n        Yes\n      </td>\n    )\n  }\n  return (\n    <td>\n      No\n    </td>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {Lap} from \"../../interfaces/Lap\";\nimport SessionBigData from \"../../interfaces/SessionBigData\";\nimport LapEntry from \"./LapEntry\";\n\nexport interface props {\n  sessionBigData: SessionBigData\n  bestLapTime: string\n}\n\nexport default function LapTable({sessionBigData, bestLapTime}: props){\n  const [lapData, setLapData] = useState([] as Lap[]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const path = `${BackendEndpointSession}/${sessionBigData.session?.id}/laps`;\n  const {getData} = useGetRequest({path: path})\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        let laps: Lap[] = [];\n        laps = json\n        laps.forEach(lap =>{\n          sessionBigData.drivers?.forEach(driver => {\n            if (driver.id === lap.driverId){\n              lap.driverName = driver.shortName;\n            }\n          });\n        });\n\n        setLapData(json);\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <div className={\"overflow-x-auto mt-5 col-span-4 bg-base-300 p-4 rounded-box w-full\"}>\n      <table className={\"table w-full\"}>\n        <thead>\n        <tr>\n          <th>id</th>\n          <th>Name</th>\n          <th>Laptime</th>\n          <th>Split 1</th>\n          <th>Split 2</th>\n          <th>Split 3</th>\n          <th>Valid</th>\n        </tr>\n        </thead>\n        <tbody>\n        {lapData.map(lap =>\n          <LapEntry\n            lap={lap}\n            bestLapTime={bestLapTime}\n          />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import SessionInformation from \"./SessionInformation\";\nimport React, {useEffect, useState} from \"react\";\nimport Error from \"../../Error\";\nimport Loading from \"../../Loading\";\nimport SessionBigData from \"../../interfaces/SessionBigData\";\nimport DriverInformation from \"./DriverInformation\";\nimport LapTable from \"./LapTable\";\nimport UseAPI from \"../../api/UseAPI\";\nimport Car from \"../../interfaces/Car\";\nimport {Lap} from \"../../interfaces/Lap\";\nimport Driver from \"../../interfaces/Driver\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function Session({id}: propId) {\n  const [data, setData] = useState({\n    session: {},\n    cars: [] as Car[],\n    laps: [] as Lap[],\n    drivers: [] as Driver[]\n  } as SessionBigData);\n\n  const useAPI = UseAPI('getSession', id)\n\n  useEffect(() => {\n    async function compileData() {\n      const temp: SessionBigData = useAPI.data[0]\n      if (!useAPI.isLoading) {\n        temp.session.bestLapTime = Number.MAX_VALUE\n        temp.drivers?.forEach(driver => {\n          driver.bestLapTimeNum = Number.MAX_VALUE\n          temp.laps?.forEach(lap => {\n            if (driver.id === lap.driverId && lap.lapTime < driver.bestLapTimeNum) {\n              driver.bestLapTimeNum = lap.lapTime;\n              driver.bestLapTime = lap.lapTimeFormatted;\n\n              if (lap.lapTime < temp.session.bestLapTime) {\n                temp.session.bestLapTimeFormatted = lap.lapTimeFormatted\n                temp.session.bestLapTime = lap.lapTime\n                temp.session.bestDriver = (driver.shortName + \" \" + driver.firstName + \" \" + driver.lastName)\n              }\n            }\n          });\n        })\n\n        temp.laps?.forEach(lap => {\n          if (lap.lapTime === temp.session.bestLapTime) {\n            lap.fastestLap = true;\n          }\n        });\n\n        setData(temp)\n      }\n    }\n\n    compileData();\n  }, [useAPI.isLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (useAPI.isLoading) {\n    return <Loading/>\n  }\n\n  if (useAPI.error.length > 0) {\n    return (\n      <Error msg={useAPI.error}/>\n    );\n  }\n\n  if (data.session != null && data.drivers != null && data.drivers.length > 0) {\n    return (\n      <div>\n        <div className=\"flex flex-row w-full\">\n          <div className=\"grid h-auto card bg-base-300 rounded-box place-items-center mb-3\">\n            <SessionInformation created_at={data.session.created_at} id={data.session.id}\n                                metaData={data.session.metaData} raceWeekendIndex={data.session.raceWeekendIndex}\n                                serverName={data.session.serverName} sessionIndex={data.session.sessionIndex}\n                                sessionType={data.session.sessionType} trackName={data.session.trackName}\n                                updated_at={data.session.updated_at} bestLapTime={data.session.bestLapTime}\n                                bestLapTimeFormatted={data.session.bestLapTimeFormatted}\n                                bestDriver={data.session.bestDriver}/>\n          </div>\n          <div className=\"overflow-x-auto mb-3 ml-5 col-span-4 bg-base-300 p-4 rounded-box w-full\">\n            <table className=\"table-zebra table w-full\">\n              <thead>\n              <tr>\n                <th>Driver</th>\n                <th>Name</th>\n                <th>Shortname</th>\n                <th>Best lap time</th>\n                <th></th>\n              </tr>\n              </thead>\n              <tbody>\n              {data.drivers.map(x =>\n                <DriverInformation driver={x} bestLapTime={data.session.bestLapTimeFormatted}/>\n              )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <LapTable bestLapTime={data.session.bestLapTimeFormatted} sessionBigData={data}/>\n      </div>\n    );\n  }\n\n  return (\n    <div/>\n  );\n}\n","import UseAPI from \"../../../api/UseAPI\";\nimport Loading from \"../../../Loading\";\nimport React from \"react\";\n\ninterface props {\n  id: number\n}\n\nexport default function CarNameById({id}: props) {\n  const useAPI = UseAPI('getSpecificCarByCarId', id)\n\n  if (useAPI.isLoading)\n    return (\n      <Loading/>\n    )\n\n  return(\n    <>{useAPI.data[0] === undefined ? \"error\" : useAPI.data[0].carName}</>\n  )\n}\n","import React from \"react\";\nimport Loading from \"../../../Loading\";\nimport Error from \"../../../Error\";\nimport UseAPI from \"../../../api/UseAPI\";\nimport CarNameById from \"../Cars/CarNameById\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function DriverStats({id}: propId) {\n  const useAPI = UseAPI('getTimesOfDriverById', id)\n\n  if (useAPI.isLoading) {\n    return <Loading/>\n  }\n\n  if (useAPI.error.length > 0) {\n    return (\n      <Error msg={useAPI.error}/>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        {useAPI.data.map(x =>\n          <div className={\"relative h-auto text-white mb-3 col-span-4 bg-base-300 p-4 rounded-box w-4/12\"}>\n            <p>{x.trackName}</p>\n            <p>{x.bestLapTimeFormatted}</p>\n            <CarNameById id={x.bestTimeCarId}/>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n","import React from \"react\";\nimport DriveSession from \"../../../interfaces/DriveSession\";\nimport Loading from \"../../../Loading\";\nimport UseAPI from \"../../../api/UseAPI\";\n\nexport default function AllSessionsTable() {\n  const useAPI = UseAPI('getSessions')\n\n  if (useAPI.isLoading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center mr-2\"}>\n        <h1 className={\"align-middle m-auto\"}>All sessions</h1>\n      </div>\n      <div className=\"overflow-x-auto mt-2 mr-2\">\n        <table className=\"table w-full\">\n          <thead>\n          <tr>\n            <th/>\n            <th>Session</th>\n            <th>Session type</th>\n            <th>Date</th>\n          </tr>\n          </thead>\n          <tbody >\n          {useAPI.data.map(item =>\n            <SessionRow created_at={item.created_at}\n                        id={item.id}\n                        metaData={item.metaData}\n                        raceWeekendIndex={item.raceWeekendIndex}\n                        serverName={item.serverName}\n                        sessionIndex={item.sessionIndex}\n                        sessionType={item.sessionType}\n                        trackName={item.trackName}\n                        updated_at={item.updated_at}\n                        bestLapTimeFormatted={item.bestLapTimeFormatted}\n                        bestLapTime={item.bestLapTime}\n                        bestDriver={item.bestDriver}/>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction SessionRow(driveSession: DriveSession){\n  return(\n    <tr>\n      <td><a href={\"/session/\" + driveSession.id}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td >{driveSession.trackName}</td>\n      <td >{driveSession.sessionType}</td>\n      <td >{driveSession.created_at}</td>\n    </tr>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../../../api/useGetRequest\";\nimport Loading from \"../../../Loading\";\nimport TrackTimes from \"../../../interfaces/TrackTimes\";\nimport Driver from \"../../../interfaces/Driver\";\n\nexport default function HighscoreBoard(){\n  const [data, setData] = useState([] as TrackTimes[]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: \"https://acc-api.aptinstall.de/tracks/times\"});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center\"}>\n        <h1 className={\"align-middle m-auto\"}>Track scoreboard</h1>\n      </div>\n      <div className=\"overflow-x-auto mt-2\">\n        <table className=\"table w-full\">\n          <thead>\n          <tr>\n            <th/>\n            <th>Track</th>\n            <th>Best laptime</th>\n            <th>player</th>\n          </tr>\n          </thead>\n          <tbody >\n          {data.map(item =>\n            <TrackRow\n              avgLapTime={item.avgLapTime}\n              avgLapTimeFormatted={item.avgLapTimeFormatted}\n              bestLapTime={item.bestLapTime}\n              bestLapTimeFormatted={item.bestLapTimeFormatted}\n              bestTimedriverId={item.bestTimedriverId}\n              trackName={item.trackName}\n              bestTimeSessionId={item.bestTimeSessionId}/>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction TrackRow(trackTimes: TrackTimes){\n  const [data, setData] = useState({} as Driver);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `https://acc-api.aptinstall.de/driver/${trackTimes.bestTimedriverId}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <td>\n        <Loading/>\n      </td>\n    );\n  }\n\n  return(\n    <tr>\n      <td><a href={\"/session/\" + trackTimes.bestTimeSessionId}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td>{trackTimes.trackName}</td>\n      <td >{trackTimes.bestLapTimeFormatted}</td>\n      <td >{(data.shortName + \" - \" + data.firstName + \" \" + data.lastName)}</td>\n    </tr>\n  );\n}\n","import AllSessionsTable from \"./AllSessionsTable\";\nimport HighscoreBoard from \"./HighscoreBoard\";\nimport React from \"react\";\n\nexport default function SessionselectionPage() {\n  return (\n    <div className={\"grid grid-cols-2\"}>\n      <AllSessionsTable/>\n      <HighscoreBoard/>\n    </div>\n  )\n}\n","import React from \"react\";\nimport UseAPI from \"../../../api/UseAPI\";\nimport Loading from \"../../../Loading\";\n\nexport default function AllDriver() {\n  const api = UseAPI('getAllDrivers')\n\n  if (api.isLoading)\n    return (\n      <Loading/>\n    )\n\n  return (\n    <div className={\"h-1/12 text-white mb-3 bg-base-300 p-4 rounded-box w-full\"}>\n      <p className={\"text-3xl\"}>All Drivers (to search someone use \"STRG + F\")</p>\n      {api.data.map(x =>\n        <div className={\"flex flex-row\"}>\n          <p>{x.shortName} {x.firstName} {x.lastName}</p>\n          <a href={\"/driver/\" + x.id}><button className={\"btn btn-sm ml-3\"}>Go To Driver</button></a>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Session from \"./sessions/session/Session\";\nimport DriverStats from \"./sessions/stats/driverStats/DriverStats\";\nimport SessionselectionPage from \"./sessions/stats/sessionSelectionPages/SessionselectionPage\";\nimport AllDriver from \"./sessions/stats/driverStats/AllDriver\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className={\"m-4\"}>\n      <div className=\"alert mb-4\">\n        <div className=\"flex-1\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#2196f3\"\n               className=\"w-6 h-6 mx-2\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n          </svg>\n          <label>This website is sill under development. Errors may occur and some features could appear to be missing.\n            This is indeed in a pre-alpha state. But anyway, visit our Teamspeak @ ts.germandeathsystem.de</label>\n        </div>\n      </div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/session/:id\" render={(props) => (\n            <Session id={props.match.params.id}/>\n          )} />\n          <Route exact path=\"/driver/:id\" render={(props) => (\n            <DriverStats id={props.match.params.id}/>\n          )} />\n          <Route path=\"/sessions\">\n            <SessionselectionPage/>\n          </Route>\n          <Route path=\"/drivers\">\n            <AllDriver/>\n          </Route>\n          <Route path=\"/\">\n            <App/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}