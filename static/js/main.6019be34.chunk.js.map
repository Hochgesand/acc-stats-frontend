{"version":3,"sources":["api/useGetRequest.tsx","sessions/SessionRow.tsx","api/endpoints.ts","Loading.tsx","sessions/TrackRow.tsx","sessions/HighscoreBoard.tsx","sessions/SessionTable.tsx","App.tsx","reportWebVitals.ts","sessions/session/SessionInformation.tsx","Error.tsx","sessions/session/DriverInformation.tsx","sessions/session/LapEntry.tsx","sessions/session/LapTable.tsx","sessions/session/Session.tsx","index.tsx"],"names":["useGetRequest","path","getData","fetch","method","headers","undefined","then","response","a","ok","Error","json","SessionRow","driveSession","href","id","className","trackName","created_at","sessionType","baseUrl","BackendEndpointSessions","BackendEndpointSession","Loading","TrackRow","trackTimes","useState","data","setData","loading","setLoading","bestTimedriverId","useEffect","fetchData","bestTimeSessionId","avgLapTimeFormatted","bestLapTimeFormatted","shortName","firstName","lastName","HighscoreBoard","map","item","avgLapTime","bestLapTime","SessionTable","metaData","raceWeekendIndex","serverName","sessionIndex","updated_at","bestDriver","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionInformation","error","xmlns","fill","viewBox","d","msg","DriverInformation","driver","LapEntry","lap","driverName","lapTimeFormatted","split1Formatted","split2Formatted","split3Formatted","JaNein","num","isValidForBest","LapTable","sessionBigData","lapData","setLapData","setError","session","forEach","drivers","driverId","catch","err","message","length","carId","lapTime","sessionId","split1","split2","split3","fastestLap","Session","cars","laps","temp","bestLapTimeNum","Number","MAX_VALUE","x","playerId","ReactDOM","render","StrictMode","exact","props","match","params","document","getElementById"],"mappings":"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","file":"static/js/main.6019be34.chunk.js","sourcesContent":["interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","import DriveSession from \"../interfaces/DriveSession\"\n\nexport default function SessionRow(driveSession: DriveSession){\n  return(\n    <tr>\n      <td><a href={\"/session/\" + driveSession.id}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td >{driveSession.trackName}</td>\n      <td >{driveSession.created_at}</td>\n      <td >{driveSession.sessionType}</td>\n    </tr>\n  );\n}\n","const baseUrl = \"https://acc-api.aptinstall.de\"\n\nexport const BackendEndpointSessions = `${baseUrl}/sessions`;\nexport const BackendEndpointSession = `${baseUrl}/session`;\n\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","import TrackTimes from \"../interfaces/TrackTimes\";\nimport React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport Loading from \"../Loading\";\nimport Driver from \"../interfaces/sessionData/Driver\";\n\nexport default function TrackRow(trackTimes: TrackTimes){\n  const [data, setData] = useState({} as Driver);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `https://acc-api.aptinstall.de/driver/${trackTimes.bestTimedriverId}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <td>\n        <Loading/>\n      </td>\n    );\n  }\n\n  return(\n    <tr>\n      <td><a href={\"/session/\" + trackTimes.bestTimeSessionId}><button className={\"btn\"}>Go To Session</button></a></td>\n      <td>{trackTimes.trackName}</td>\n      <td >{trackTimes.avgLapTimeFormatted}</td>\n      <td >{trackTimes.bestLapTimeFormatted}</td>\n      <td >{(data.shortName + \": \" + data.firstName + \" \" + data.lastName)}</td>\n  </tr>\n);\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport Loading from \"../Loading\";\nimport TrackTimes from \"../interfaces/TrackTimes\";\nimport TrackRow from \"./TrackRow\";\n\nexport default function HighscoreBoard(){\n  const [data, setData] = useState([] as TrackTimes[]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: \"https://acc-api.aptinstall.de/tracks/times\"});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div className=\"overflow-x-auto mt-2\">\n      <table className=\"table w-full\">\n        <thead>\n        <tr>\n          <th/>\n          <th>Track</th>\n          <th>avg laptime of all laps</th>\n          <th>Best laptime...</th>\n          <th>...ofplayer</th>\n        </tr>\n        </thead>\n        <tbody >\n        {data.map(item =>\n          <TrackRow\n            avgLapTime={item.avgLapTime}\n            avgLapTimeFormatted={item.avgLapTimeFormatted}\n            bestLapTime={item.bestLapTime}\n            bestLapTimeFormatted={item.bestLapTimeFormatted}\n            bestTimedriverId={item.bestTimedriverId}\n            trackName={item.trackName}\n            bestTimeSessionId={item.bestTimeSessionId}/>)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../api/useGetRequest\";\nimport SessionRow from \"./SessionRow\";\nimport DriveSession from \"../interfaces/DriveSession\";\nimport {BackendEndpointSessions} from \"../api/endpoints\";\nimport Loading from \"../Loading\";\nimport HighscoreBoard from \"./HighscoreBoard\";\n\n\nexport default function SessionTable() {\n  const [data, setData] = useState([{} as DriveSession]);\n  const [loading, setLoading] = useState(true);\n  const {getData} = useGetRequest({path: `${BackendEndpointSessions}`});\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        setData(json);\n        setLoading(false)\n      });\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return (\n      <Loading/>\n    );\n  }\n\n  return(\n    <div className={\"grid grid-cols-2\"}>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center mr-2\"}>\n        <h2 className={\"align-middle m-auto\"}>All Sessions</h2>\n      </div>\n      <div className={\"col-span-1 h-10 card bg-base-300 rounded-box place-items-center\"}>\n        <h2 className={\"align-middle m-auto\"}>Track Highscoreboard</h2>\n      </div>\n      <div className=\"overflow-x-auto mt-2 mr-2\">\n        <table className=\"table w-full\">\n          <thead>\n          <tr>\n            <th/>\n            <th>Session</th>\n            <th>Date</th>\n            <th>Session type</th>\n          </tr>\n          </thead>\n          <tbody >\n          {data.map(item =>\n            <SessionRow created_at={item.created_at}\n                        id={item.id}\n                        metaData={item.metaData}\n                        raceWeekendIndex={item.raceWeekendIndex}\n                        serverName={item.serverName}\n                        sessionIndex={item.sessionIndex}\n                        sessionType={item.sessionType}\n                        trackName={item.trackName}\n                        updated_at={item.updated_at}\n                        bestLapTimeFormatted={item.bestLapTimeFormatted}\n                        bestLapTime={item.bestLapTime}\n                        bestDriver={item.bestDriver}/>)}\n          </tbody>\n        </table>\n      </div>\n      <HighscoreBoard/>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport './index.scss'\nimport SessionTable from \"./sessions/SessionTable\";\n\n\nfunction App() {\n  return (\n    <div className={\"lander w-full h-full rounded-md px-4 py-4\"}>\n      <h2>\n        <SessionTable/>\n      </h2>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import DriveSession from \"../../interfaces/DriveSession\";\n\nexport default function SessionInformation(driveSession: DriveSession) {\n  return (\n    <div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center w-auto m-2 p-2\">\n        <h2>Sessioninformation</h2>\n      </div>\n      <div className=\"h-10 w-11/12 card bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.id}\n      </div>\n      <div className=\"h-10 card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.trackName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        {driveSession.serverName}\n      </div>\n      <div className=\"h-auto card w-11/12 bg-base-200 rounded-box place-items-center m-2 p-2\">\n        Best Laptime overall: {driveSession.bestLapTimeFormatted}\n      </div>\n    </div>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error m-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","import Driver from \"../../interfaces/sessionData/Driver\";\n\nexport default function DriverInformation(driver: Driver) {\n  return(\n    <tr>\n      <td>{driver.firstName}</td>\n      <td className={\"content-end\"}>{driver.lastName}</td>\n      <td>{driver.shortName}</td>\n      <td>{driver.bestLapTime}</td>\n    </tr>\n  );\n}\n","import {Lap} from \"../../interfaces/sessionData/Lap\";\n\ninterface IJaNein {\n  num: number\n}\n\nexport default function LapEntry(lap: Lap){\n  return(\n    <tr>\n      <td>{lap.id}</td>\n      <td>{lap.driverName}</td>\n      <td>{lap.lapTimeFormatted}</td>\n      <td>{lap.split1Formatted}</td>\n      <td>{lap.split2Formatted}</td>\n      <td>{lap.split3Formatted}</td>\n      <JaNein num={lap.isValidForBest}/>\n    </tr>\n  );\n}\n\nfunction JaNein(num: IJaNein){\n  if (num.num === 1){\n    return (\n      <td>\n        Yes\n      </td>\n    )\n  }\n  return (\n    <td>\n      No\n    </td>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {Lap} from \"../../interfaces/sessionData/Lap\";\nimport SessionBigData from \"../../interfaces/sessionData/SessionBigData\";\nimport LapEntry from \"./LapEntry\";\n\n\nexport default function LapTable(sessionBigData: SessionBigData){\n  const [lapData, setLapData] = useState([] as Lap[]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const path = `${BackendEndpointSession}/${sessionBigData.session?.id}/laps`;\n  const {getData} = useGetRequest({path: path})\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json){\n        let laps: Lap[] = [];\n        laps = json\n        laps.forEach(lap =>{\n          sessionBigData.drivers?.forEach(driver => {\n            if (driver.id === lap.driverId){\n              lap.driverName = driver.shortName;\n            }\n          });\n        });\n\n        setLapData(json);\n        setLoading(false)\n      }).catch( err =>{\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <div className={\"overflow-x-auto mt-5 col-span-4 bg-base-300 p-4 rounded-box w-6/12\"}>\n      <table className={\"table\"}>\n        <thead>\n        <tr>\n          <th>id</th>\n          <th>Name</th>\n          <th>Laptime</th>\n          <th>Split 1</th>\n          <th>Split 2</th>\n          <th>Split 3</th>\n          <th>Valid</th>\n        </tr>\n        </thead>\n        <tbody>\n        {lapData.map(lap =>\n          <LapEntry\n            carId={lap.carId}\n            created_at={lap.created_at}\n            driverId={lap.driverId}\n            id={lap.id}\n            isValidForBest={lap.isValidForBest}\n            lapTime={lap.lapTime}\n            lapTimeFormatted={lap.lapTimeFormatted}\n            sessionId={lap.sessionId}\n            split1={lap.split1}\n            split1Formatted={lap.split1Formatted}\n            split2={lap.split2}\n            split2Formatted={lap.split2Formatted}\n            split3={lap.split3}\n            split3Formatted={lap.split3Formatted}\n            updated_at={lap.updated_at}\n            driverName={lap.driverName}\n            fastestLap={lap.fastestLap}\n          />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import SessionInformation from \"./SessionInformation\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport React, {useEffect, useState} from \"react\";\nimport Error from \"../../Error\";\nimport {BackendEndpointSession} from \"../../api/endpoints\";\nimport Loading from \"../../Loading\";\nimport SessionBigData from \"../../interfaces/sessionData/SessionBigData\";\nimport Driver from \"../../interfaces/sessionData/Driver\";\nimport Car from \"../../interfaces/sessionData/Car\";\nimport DriverInformation from \"./DriverInformation\";\nimport LapTable from \"./LapTable\";\nimport {Lap} from \"../../interfaces/sessionData/Lap\";\n\nexport interface propId {\n  id: string\n}\n\nexport default function Session({id}: propId) {\n  const [data, setData] = useState({session: {}, cars: [] as Car[], laps: [] as Lap[], drivers: [] as Driver[]} as SessionBigData);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const {getData} = useGetRequest({path: `${BackendEndpointSession}/${id}`})\n\n  useEffect(() => {\n      async function fetchData() {\n        await getData().then(function (json){\n          let temp: SessionBigData = json;\n\n          temp.drivers?.forEach(driver => {\n            driver.bestLapTimeNum = Number.MAX_VALUE\n            temp.session.bestLapTime = Number.MAX_VALUE\n            temp.laps?.forEach(lap => {\n              if (driver.id === lap.driverId && lap.lapTime < driver.bestLapTimeNum){\n                driver.bestLapTimeNum = lap.lapTime;\n                driver.bestLapTime = lap.lapTimeFormatted;\n                if (lap.lapTime < temp.session.bestLapTime){\n                  temp.session.bestLapTimeFormatted = lap.lapTimeFormatted\n                  lap.fastestLap = true;\n                  temp.session.bestDriver = (driver.shortName + driver.firstName + driver.lastName)\n                }\n              }\n            });\n          })\n\n          setData(temp);\n          setLoading(false)\n        }).catch( err =>{\n            setError(err.message)\n            setLoading(false);\n          }\n        );\n      }\n      fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading){\n    return <Loading/>\n  }\n\n  if (error.length > 0){\n    return(\n      <Error msg={error}/>\n    );\n  }\n\n  if (data.session != null && data.drivers != null){\n    return (\n      <div className={\"p-5\"}>\n        <div className=\"flex flex-row w-full\">\n          <div className=\"grid h-auto card bg-base-300 rounded-box place-items-center mb-3 p-2\">\n            <SessionInformation created_at={data.session.created_at} id={data.session.id} metaData={data.session.metaData} raceWeekendIndex={data.session.raceWeekendIndex} serverName={data.session.serverName} sessionIndex={data.session.sessionIndex} sessionType={data.session.sessionType} trackName={data.session.trackName} updated_at={data.session.updated_at} bestLapTime={data.session.bestLapTime} bestLapTimeFormatted={data.session.bestLapTimeFormatted} bestDriver={data.session.bestDriver}/>\n          </div>\n          <div className=\"overflow-x-auto mb-3 ml-5 col-span-4 bg-base-300 p-4 rounded-box w-5/12\">\n            <table className=\"table-zebra table w-full\">\n              <thead>\n              <tr>\n                <th>Driver</th>\n                <th>Name</th>\n                <th>Shortname</th>\n                <th>Best lap time</th>\n              </tr>\n              </thead>\n              <tbody >\n              {data.drivers.map(x =>\n                <DriverInformation created_at={x.created_at} firstName={x.firstName} id={x.id} lastName={x.lastName} playerId={x.playerId} shortName={x.shortName} updated_at={x.updated_at} bestLapTime={x.bestLapTime} bestLapTimeNum={x.bestLapTimeNum}/>\n              )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      <LapTable session={data.session} cars={data.cars} drivers={data.drivers} />\n    </div>\n    );\n  }\n\n  return(\n    <div/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Session from \"./sessions/session/Session\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/session/:id\" render={(props) => (\n          <Session id={props.match.params.id}/>\n        )} />\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}